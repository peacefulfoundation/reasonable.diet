---
import { type CollectionEntry, getCollection, getEntries } from 'astro:content';
import ArrowCard from '@/components/ArrowCard.astro';
import BottomLayout from '@/layouts/BottomLayout.astro';
import TopLayout from '@/layouts/TopLayout.astro';
import ArticleTopLayout from '@/layouts/ArticleTopLayout.astro';
import PageLayout from '@/layouts/PageLayout.astro';

export async function getStaticPaths() {
  const recipes = await getCollection('recipes');

  return recipes.map((recipe) => ({
    params: { slug: recipe.slug },
    props: { recipe },
  }));
}

const { recipe } = Astro.props as { recipe: CollectionEntry<'recipes'> };
const { Content } = await recipe.render();

let relatedPosts;
if (recipe.data.relatedRecipes) {
  relatedPosts = await getEntries(recipe.data.relatedRecipes);
}
---

<PageLayout title={recipe.data.title} description={recipe.data.description}>
  <TopLayout>
    <div class="animate">
      <ArticleTopLayout entry={recipe} />
    </div>
  </TopLayout>
  <BottomLayout>
    <div class="animate prose"><Content /></div>
    {
      relatedPosts && (
        <div class="animate">
          <h2 class="mb-4 mt-8 text-xl font-bold leading-5">Related Recipes</h2>
          <ul class="flex flex-col space-y-3">
            {relatedPosts.map((entry) => (
              <li>
                <ArrowCard entry={entry} />
              </li>
            ))}
          </ul>
        </div>
      )
    }
  </BottomLayout>
</PageLayout>
